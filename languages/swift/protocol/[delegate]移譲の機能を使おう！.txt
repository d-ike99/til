テーマ
	あるクラスでのイベントを別のクラスに「移譲」しよう！

前提
	移譲元クラスは、移譲先クラスからインスタンス生成されてないといけない

ソース
	// 移譲するprotocolの定義
	protocol outProtocol: class {
		func sendMessage()
	}

	// 移譲元クラスの定義
	class receaveClass: outProtocol {		// point: 移譲元クラスでprotocolを継承する
		init(){
			var sampleClass: sendClass = new sendClass()
			sampleClass.output = self				// point: 移譲メソッドを自身に定義する
		}

		// 移譲メソッドの実装								// point: 実装しないとエラー発生
		output(){
			//
		}
	}

	// 移譲先クラスの定義
	class sendClass {
		output: outProtocol

		func sample(){										// point: 移譲メソッドを定義する
			output.sendMessage()
		}
	}

コメント
	tableviewやscrollviewのdelegateはよく使いますが、上記のようにprotocolが作成されています。
	tableviewの場合、以下みたく設定することがありますが、このdelegateの部分は上記で言うとこの
	「output（outProtocolプロトコルの定義）」に当たるものになると思います。
	→ちゃんと調査します

		tableview.delegate = self

	ですので、移譲先クラスでプロトコルの宣言は「delegate」とした方が統一感があって良いのかなと思いました。
	→サンプルを見てるとoutputと表記してるものも結構見かけました
